{"version":3,"sources":["logo.svg","components/sidebar/sidebar-options/index.jsx","components/sidebar/index.jsx","components/header/index.jsx","components/song-row/index.jsx","components/body/index.jsx","musics/linkinpark.mp3","components/footer/index.jsx","components/player/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","title","Icon","className","Sidebar","src","alt","Home","Search","LibraryMusic","Header","SongRow","track","Body","useState","music","setMusic","useEffect","a","fetch","then","data","json","songData","PlayCircleFilled","Favorite","fontSize","MoreHoriz","map","m","name","Footer","Audio","audio","playing","setPlaying","mute","setMute","value","setValue","repeat","setRepeat","play","pause","loop","muted","volume","addEventListener","removeEventListener","onClick","Grid","container","spacing","item","PlaylistPlay","VolumeDown","xs","Slider","onChange","event","newValue","aria-labelledby","Player","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1d1254f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport'./styles/SidebarOption.css'\n\nconst SidebarOption = ({title, Icon}) => {\n    return (\n        <div className='sidebarOption'>\n            {Icon && <Icon className='sidebarOption__icon' />}\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n        </div>\n    );\n};\n\nexport default SidebarOption;\n","import React from 'react';\nimport './styles/Sidebar.css'\nimport SidebarOption from \"./sidebar-options\";\nimport {Home, Search, LibraryMusic} from \"@material-ui/icons\";\n\nconst Sidebar = () => {\n\n    // const [{playlists}, dispatch] = useDataLayerValue();\n\n    return (\n        <div className='sidebar'>\n            <img\n                className='sidebar__logo'\n                src='https://www.getapkfile.com/wp-content/uploads/2018/07/Music-Player-APK-Download-Android-APP-150x150.png'\n                alt='player'\n            />\n            <SidebarOption Icon={Home} title='Home'/>\n            <SidebarOption Icon={Search} title='Search'/>\n            <SidebarOption Icon={LibraryMusic} title='Your Library'/>\n            <br/>\n            <strong className='sidebar__title'>PLAYLIST</strong>\n            <hr/>\n            {/*{playlists?.items?.map(playlist => (*/}\n            {/*    <SidebarOption title={playlist.name}/>*/}\n            {/*))}*/}\n        </div>\n    );\n};\n\nexport default Sidebar;\n\n","import React from 'react';\n\nconst Header = () => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport './styles/SongRow.css'\nconst SongRow = ({track}) => {\n    return (\n        <div className={'songRow'}>\n            <img className={'songRow__album'} src={''} alt={'ROW'}/>\n            <div className='songRow__info'>\n                <h1>{track}</h1>\n                <p>\n                    track full description\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default SongRow;\n","import React, {useEffect, useState} from 'react';\nimport './styles/Body.css'\nimport {Favorite, MoreHoriz, PlayCircleFilled} from \"@material-ui/icons\";\nimport Header from \"../header\";\nimport SongRow from \"../song-row\";\n\nconst Body = ({}) => {\n    const [music, setMusic] = useState([]);\n    useEffect(() => {\n        let mounted = true;\n        const songData = async () => {\n            await fetch('http://localhost:5050/show-song')\n                .then(data => data.json())\n                .then(data => mounted ? setMusic(data) : null)\n        }\n        songData().then();\n    }, [setMusic])\n    return (\n        <div className='body'>\n            <Header/>\n            <div className='body__info'>\n                <img src={''} alt=''/>\n                <div className='body__infoText'>\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover Weekly</h2>\n                    <p>Discover Weekly</p>\n                </div>\n            </div>\n            <div className='body__songs'>\n                <div className='body__icons'>\n                    <PlayCircleFilled className='body__shuffle'/>\n                    <Favorite fontSize='large'/>\n                    <MoreHoriz/>\n                </div>\n                {music?.map(m => (\n                    <SongRow track={m.name}/>\n                ))}\n\n            </div>\n        </div>\n    );\n};\n\nexport default Body;\n","export default __webpack_public_path__ + \"static/media/linkinpark.6920313a.mp3\";","import React, {useEffect, useState} from 'react';\nimport './styles/Footer.css'\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport {PlaylistPlay, VolumeDown} from \"@material-ui/icons\";\nimport {Slider, Grid} from \"@material-ui/core\";\nimport PauseIcon from '@material-ui/icons/Pause';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport Replay10Icon from '@material-ui/icons/Replay10';\nimport music from '../../musics/linkinpark.mp3'\n\nconst Footer = () => {\n    const [audio] = useState(new Audio(music));\n    const [playing, setPlaying] = useState(false);\n    const [mute, setMute] = useState(true)\n    const [value, setValue] = useState(20);\n    const [repeat, setRepeat] = useState(false)\n    const toggle = () => setPlaying(!playing);\n    const muteMusic = () => setMute(!mute);\n    const repeatMusic = () => setRepeat(!repeat)\n\n    useEffect(() => {\n        playing ? audio.play() : audio.pause();\n        audio.loop = repeat;\n        mute ? audio.muted = false : audio.muted = true;\n        audio.volume = value / 100;\n        mute ?  setValue(value) : setValue(0) ;\n    }, [playing, mute, value, repeat])\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => setPlaying(false));\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n        }\n    })\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className='footer'>\n            <div className='footer__left'>\n                <img\n                    className='footer__albumLogo'\n                    src='https://angelacampbellblog.files.wordpress.com/2016/11/4f1691b44506ee4b727454799b8488f7.jpg'\n                    alt=''/>\n                <div className='footer__songInfo'>\n                    <h4>In the end</h4>\n                    <p>Linkin Park</p>\n                </div>\n            </div>\n\n            <div className='footer__center'>\n                <ShuffleIcon className='footer__green'/>\n                <SkipPreviousIcon className='footer__icon'/>\n                <button className={'btn'} onClick={toggle}>{playing ?\n                    <PauseIcon fontSize='large' className='footer__icon'/> :\n                    <PlayCircleOutlineIcon fontSize='large' className='footer__icon'/>}</button>\n                <SkipNextIcon className='footer__icon'/>\n                <button className={'btn'} onClick={repeatMusic}>{repeat ?\n                    <RepeatOneIcon className='footer__green'/> : <RepeatIcon className='footer__green'/>}</button>\n                <Replay10Icon className='footer__green'/>\n            </div>\n\n            <div className='footer__right'>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlay/>\n                    </Grid>\n                    <Grid item>\n                        <button className={'btn'} onClick={muteMusic}>{mute ? <VolumeDown/> : <VolumeOffIcon/>}</button>\n                    </Grid>\n                    <Grid item xs>\n                        <Slider\n                            value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\"\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Sidebar from \"../sidebar\";\nimport Body from \"../body\";\nimport Footer from \"../footer\";\nimport './styles/Player.css'\n\nconst Player = ({}) => {\n    return (\n        <div className={'player'}>\n            <div className={'player__body'}>\n                {/*  Sidebar  */}\n                <Sidebar/>\n                {/*  Body  */}\n                <Body />\n            </div>\n\n            {/*  Footer  */}\n            <Footer/>\n        </div>\n    );\n};\n\nexport default Player;\n","import logo from './logo.svg';\nimport './App.css';\nimport Player from \"./components/player\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}